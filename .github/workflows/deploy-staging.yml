name: Deploy to Staging

on:
  push:
    branches:
      - staging  # Ejecutar en cada push a la rama staging
  workflow_dispatch:  # Permitir la ejecución manual

jobs:
  deploy:
    runs-on: ubuntu-latest  # Usaremos una imagen de Ubuntu para el servidor

    steps:
      - name: Check out code
        uses: actions/checkout@v2  # Clona el código fuente

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'  # Ajusta la versión de PHP a la que uses

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader  # Instala dependencias de PHP

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'  # Ajusta la versión de Node.js si es necesario

      - name: Install npm dependencies
        run: npm install  # Instala dependencias de Node (Vue, Vite, etc.)

      - name: Build assets with Vite
        run: npm run build  # Ejecuta la compilación de Vue con Vite

      - name: Deploy to Staging Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Clave privada configurada en Secrets
        run: |
          # Crear el directorio .ssh y configurar la clave SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Agregar la llave pública del servidor al archivo known_hosts
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

          # Conectar al servidor y ejecutar comandos de despliegue
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd /path/to/your/app  # Ruta del proyecto en el servidor
            git pull origin staging  # Asegúrate de tener los últimos cambios de la rama staging
            composer install --no-interaction --prefer-dist --optimize-autoloader
            npm install
            npm run build
            php artisan migrate --force  # Ejecuta las migraciones
            php artisan config:cache  # Cachea la configuración para mayor rendimiento
            php artisan route:cache  # Cachea las rutas
          EOF
